kind: Deployment
apiVersion: apps/v1
metadata:
# set your lab user name
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.ReplicaNumber }}
  selector:
    matchLabels:
# set your lab user name
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
# set your lab user name
        app: {{ .Chart.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ConfigMap.yaml") . | sha256sum }}
        argocd.argoproj.io/sync-wave: '{{ .Values.argocd.syncwave.deployment }}'
    spec:
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: {{ .Chart.Name }}
          ports:
            - containerPort: {{ .Values.containers.containerPort }}
              protocol: TCP
          imagePullPolicy: IfNotPresent
# Update with the image you build in part 1
          image: {{ .Values.containers.image }}:{{ .Values.containers.tag }}
          volumeMounts:
          - name: index-html
            mountPath: {{ .Values.volume.mount.path }} # this will mount the html.index file to it application location
          readinessProbe:
            {{- tpl (toYaml .Values.probes.readiness) . | nindent 12 }}
          livenessProbe:
            {{- tpl (toYaml .Values.probes.liveness) . | nindent 12 }}
          env:
            - name: PORT
              value: {{ .Values.containers.containerPort | quote }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: index-html
          configMap:
            name: '{{ .Chart.Name }}-html'
            defaultMode: 420
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10